[
  {
    "id": 1,
    "title": "Personal Bio Page",
    "description": "Build a webpage with a heading, a paragraph about yourself, and a styled button that triggers an alert when clicked.",
    "requirements": [
      "Includes a heading with your name",
      "Contains a paragraph with bio information",
      "Has a styled button with hover effect",
      "Button triggers an alert on click",
      "Page is responsive on mobile devices"
    ],
    "starterCode": {
      "html": "<h1>My Bio</h1>\n<p>Tell us about yourself!</p>\n<button id=\"myButton\">Click Me</button>",
      "css": "body {\n    font-family: 'Roboto', sans-serif;\n    text-align: center;\n    padding: 20px;\n}\nbutton {\n    background-color: #3498db;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\nbutton:hover {\n    background-color: #2980b9;\n}",
      "js": "document.getElementById('myButton').addEventListener('click', () => {\n    alert('Hello!');\n});"
    }
  },
  {
    "id": 2,
    "title": "Appointment Booking Form",
    "description": "Create a form for booking appointments with fields for name, date, and time, styled with a clean design.",
    "requirements": [
      "Form includes input fields for name, date, and time",
      "Form is styled with CSS",
      "Form validates input on submission",
      "Button triggers a confirmation alert",
      "Page is responsive"
    ],
    "starterCode": {
      "html": "<form id=\"bookingForm\">\n    <input type=\"text\" placeholder=\"Name\">\n    <input type=\"date\">\n    <input type=\"time\">\n    <button type=\"submit\">Book</button>\n</form>",
      "css": "form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    max-width: 300px;\n    margin: 20px auto;\n}\ninput, button {\n    padding: 10px;\n    border-radius: 4px;\n    border: 1px solid #ddd;\n}\nbutton {\n    background-color: #2ecc71;\n    color: white;\n    cursor: pointer;\n}\nbutton:hover {\n    background-color: #27ae60;\n}",
      "js": "document.getElementById('bookingForm').addEventListener('submit', (e) => {\n    e.preventDefault();\n    alert('Appointment booked!');\n});"
    }
  },
  {
    "id": 3,
    "title": "Product Card",
    "description": "Design a product card with an image, title, price, and a 'Buy Now' button that changes color on hover.",
    "requirements": [
      "Includes an image",
      "Displays title and price",
      "Has a styled button with hover effect",
      "Button triggers an alert on click",
      "Card is responsive"
    ],
    "starterCode": {
      "html": "<div class=\"product-card\">\n    <!-- Add image here -->\n    <h2>Product Name</h2>\n    <p>$19.99</p>\n    <button>Buy Now</button>\n</div>",
      "css": ".product-card {\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    padding: 20px;\n    max-width: 200px;\n    text-align: center;\n}\nimg {\n    max-width: 100%;\n}\nbutton {\n    background-color: #e74c3c;\n    color: white;\n    padding: 10px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\nbutton:hover {\n    background-color: #c0392b;\n}",
      "js": "document.querySelector('button').addEventListener('click', () => {\n    alert('Added to cart!');\n});"
    }
  },
  {
    "id": 4,
    "title": "Simple Calculator",
    "description": "Build a basic calculator with buttons for numbers and operations, performing addition, subtraction, multiplication, and division.",
    "requirements": [
      "Includes a display area for results",
      "Has buttons for numbers and operations",
      "Performs basic arithmetic",
      "Styled with CSS",
      "Responsive layout"
    ],
    "starterCode": {
      "html": "<div class=\"calculator\">\n    <input type=\"text\" id=\"display\" readonly>\n    <div class=\"buttons\">\n        <button>1</button>\n        <button>2</button>\n        <!-- Add more buttons -->\n    </div>\n</div>",
      "css": ".calculator {\n    max-width: 300px;\n    margin: 20px auto;\n    border: 1px solid #ddd;\n    padding: 20px;\n    border-radius: 8px;\n}\n#display {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n}\n.buttons {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 5px;\n}\nbutton {\n    padding: 15px;\n    border: none;\n    background-color: #ecf0f1;\n    cursor: pointer;\n}\nbutton:hover {\n    background-color: #bdc3c7;\n}",
      "js": "const display = document.getElementById('display');\nconst buttons = document.querySelectorAll('.buttons button');\nbuttons.forEach(button => {\n    button.addEventListener('click', () => {\n        display.value += button.textContent;\n    });\n});"
    }
  },
  {
    "id": 5,
    "title": "Navigation Bar",
    "description": "Create a responsive navigation bar with links and a hamburger menu for mobile devices.",
    "requirements": [
      "Includes at least 4 navigation links",
      "Has a hamburger menu on mobile",
      "Menu toggles on click",
      "Styled with CSS",
      "Fully responsive"
    ],
    "starterCode": {
      "html": "<nav class=\"navbar\">\n    <div class=\"logo\">Logo</div>\n    <ul class=\"nav-links\">\n        <li><a href=\"#\">Home</a></li>\n        <li><a href=\"#\">About</a></li>\n        <li><a href=\"#\">Services</a></li>\n        <li><a href=\"#\">Contact</a></li>\n    </ul>\n    <div class=\"hamburger\">â˜°</div>\n</nav>",
      "css": ".navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px;\n    background-color: #2c3e50;\n    color: white;\n}\n.nav-links {\n    display: flex;\n    list-style: none;\n    gap: 20px;\n}\n.nav-links a {\n    color: white;\n    text-decoration: none;\n}\n.hamburger {\n    display: none;\n    font-size: 1.5em;\n    cursor: pointer;\n}\n@media (max-width: 768px) {\n    .nav-links {\n        display: none;\n    }\n    .hamburger {\n        display: block;\n    }\n}",
      "js": "document.querySelector('.hamburger').addEventListener('click', () => {\n    document.querySelector('.nav-links').style.display = document.querySelector('.nav-links').style.display === 'flex' ? 'none' : 'flex';\n});"
    }
  }
]
